ip addr
ip link
vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
ONBOOT="yes"
systemctl restart network

네트워크툴 설치
yum -y install net-tools
ifconfig
"CentOS 6 - 설정" --- 네트워크 --- 어댑터 1 --- 다음에 연결됨(A): 브리지 어댑터 --- 이름(N): 실제로 인터넷이 되는 랜카드 선택 --- 무작위 모드(P): 모두 허용 --- [확인]
systemctl restart network

ssh설치
yum -y install openssh*
systemctl restart sshd.service,,

wget설치
cd /usr/local/
yum -y install wget

jdk설치
cd /usr/local/
wget --no-cookies --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/7u72-b14/jdk-7u72-linux-x64.rpm" -O jdk7.rpm
rpm -ivh jdk7.rpm
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-x64.tar.gz

gunzip jdk-8u60-linux-x64.tar.gz
tar -xvf jdk-8u60-linux-x64.tar
mv jdk1.8.0_60 /usr/local
cd /usr/local
심볼릭링크
ln -s jdk1.8.0_60 java

unset i
unset pathmunge  << 아래에 입력
vi /etc/profile
JAVA_HOME=/usr/local/java
CLASSPATH=.:$JAVA_HOME/lib/tools.jar
PATH=$PATH:$JAVA_HOME/bin
export JAVA_HOME CLASSPATH PATH
source /etc/profile
java -version
javac -version

톰캣설치
mkdir /usr/local/server
cd /usr/local/server
wget http://mirror.apache-kr.org/tomcat/tomcat-8/v8.0.21/bin/apache-tomcat-8.0.21.tar.gz
gunzip apache-tomcat-8.0.21.tar.gz
tar -xvf apache-tomcat-8.0.21.tar
ln -s apache-tomcat-8.0.21 tomcat
wget http://apache.mirror.cdnetworks.com/tomcat/tomcat-8/v8.0.23/bin/apache-tomcat-8.0.23.tar.gz
gunzip apache-tomcat-8.0.23.tar.gz
tar -xvf apache-tomcat-8.0.23.tar
ln -s apache-tomcat-8.0.23 tomcat
vi /etc/profile
JAVA_HOME=/usr/local/java
CATALINA_HOME=/usr/local/server/tomcat
CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$CATALINA_HOME/lib-jsp-api.jar:$CATALINA_HOME/lib/servlet-api.jar
PATH=$PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin
export JAVA_HOME CLASSPATH PATH CATALINA_HOME
source /etc/profile
/usr/local/server/tomcat/bin/startup.sh
/usr/local/server/tomcat/bin/shutdown.sh
firewall-cmd --permanent --zone=public --add-port=80/tcp
firewall-cmd --permanent --zone=public --add-port=8080/tcp
cat /etc/firewalld/zones/public.xml
systemctl restart firewalld

아파치설치 톰캣연동
yum -y install gcc-c++ 
yum -y install openssl-devel.x86_64
yum -y install openssl-devel
yum -y update openssl

cd /usr/local/src
wget http://apache.tt.co.kr//httpd/httpd-2.4.16.tar.gz
wget http://archive.apache.org/dist/apr/apr-1.5.2.tar.gz
wget http://archive.apache.org/dist/apr/apr-util-1.5.4.tar.gz
wget http://downloads.sourceforge.net/pcre/pcre-8.36.tar.bz2

tar xvfz httpd-2.4.16.tar.gz
tar xvfz apr-1.5.2.tar.gz
tar xvfz apr-util-1.5.4.tar.gz
tar xvf pcre-8.36.tar.bz2

mkdir /usr/local/apr
cd /usr/local/src/apr-1.5.2
./configure --prefix=/usr/local/apr
make
make install
make && make install

mkdir /usr/local/apr-util
cd /usr/local/src/apr-util-1.5.4
./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr
make
make install
make && make install

cd /usr/local/src/pcre-8.36
./configure --prefix=/usr/local
make
make install
make && make install

mkdir /usr/local/apache
cd /usr/local/src/httpd-2.4.16
./configure  --prefix=/usr/local/apache \
--enable-rule=SHARED_CORE  \
--enable-so  \
--enable-rewrite  \
--enable-vhost-alias  \
--enable-ssl  \
--enable-proxy  \
--enable-shared=max  \
--enable-modules=shared  \
--enable-mods-shared=all  \
--with-apr=/usr/local/apr  \
--with-charset=utf-8  \
--with-mpm=prefork \
--with-apr-util=/usr/local/apr-util
make
make install
make && make install


cd /usr/local/src/
wget http://apache.mirror.cdnetworks.com/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.40-src.tar.gz -O connector.tar.gz
tar -zxvf connector.tar.gz
cd tomcat-connectors-1.2.40-src/native/
./configure --with-apxs=/usr/local/apache/bin/apxs
make && make install

cd /usr/local/apache/conf/
vi workers.properties
worker.list=pem
worker.pem.port=8009
worker.pem.host=localhost
worker.pem.type=ajp13

vi /usr/local/apache/conf/httpd.conf
(변경전) #LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
(변경후) LoadModule slotmem_shm_module modules/mod_slotmem_shm.so 
# 모듈 로드 부분 마지막에 삽입
LoadModule jk_module modules/mod_jk.so 
# 모듈 설정 부분에 삽입
<IfModule jk_module>
    JkWorkersFile conf/workers.properties
    JkLogFile logs/mod_jk.log
    JkLogLevel error
</IfModule>
(변경전) #Include conf/extra/httpd-vhosts.conf
(변경후) Include conf/extra/httpd-vhosts.conf

#Listen 9090 주석처리


vi /usr/local/apache/conf/extra/httpd-vhosts.conf
Listen 9090 
<VirtualHost *:9090>
    ServerAdmin sun@phychode.com
    DocumentRoot /data/test/webapp
    ServerName www.phychode.com

    ErrorLog "logs/dummy-host.example.com-error_log"
    CustomLog "logs/dummy-host.example.com-access_log" common

   JkMount  /*.jsp          pem
   JkMount  /*.phyjax      pem
    JkMount  /*.phy        pem
    JkMount  /*.phyin        pem
    JkMount /               pem
    JkMount /j_spring_security_logout pem
    JkMount /j_spring_security_check pem
<Directory "/home/test/webapp">
       Options Indexes FollowSymLinks
       AllowOverride None
       Order allow,deny
       Allow from all
       Require all granted
 </Directory>

</VirtualHost>



chown apache:apache -R /usr/local/apache
cd /usr/local/apache/bin
chmod +s httpd

vi /usr/lib/systemd/system/apache.service
[Unit]
Description=apache2 Service
After=syslog.target
After=network.target

[Service]
Type=forking
ExecStart=/usr/local/apache/bin/apachectl start
ExecStop=/usr/loacal/apache/bin/apachectl graceful-stop
ExecReload=/usr/local/apache/bin/apachectl graceful
PrivateTmp=true
LimitNOFILE=infinity

[Install]
WantedBy=multi-user.target


자동 시작 등록
systemctl enable apache  

/usr/local/apache/bin/apachectl start
/usr/local/server/tomcat/bin/catalina.sh start



AH00112: Warning: DocumentRoot [/data/test/webapp] does not exist
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using localhost.localdomain. Set the 'ServerName' directive globally to suppress this message


메이븐설치
wget http://apache.mirror.cdnetworks.com/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz
tar -zxvf apache-maven-3.3.3-bin.tar.gz
mv ./apache-maven-3.3.3 /usr/local/apache-maven-3.3.3

vi /etc/profile
JAVA_HOME=/usr/local/java
CATALINA_HOME=/usr/local/server/tomcat
MAVEN_HOME=/usr/local/apache-maven-3.3.3
CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$CATALINA_HOME/lib-jsp-api.jar:$CATALINA_HOME/lib/servlet-api.jar
PATH=$PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin:$MAVEN_HOME/bin
export JAVA_HOME CLASSPATH PATH CATALINA_HOME MAVEN_HOME
source /etc/profile


ln -s apache-maven-3.3.3 maven


연동설정
vi /usr/local/apache/conf/httpd.conf
ServerName localhost
Include conf/extra/httpd-vhosts.conf
LoadModule jk_module modules/mod_jk.so
<ifModule jk_module>
        JkWorkersFile conf/workers.properties
        JkShmFile logs/mod_jk.shm
        JkLogFile logs/mod_jk.log
        JkLogLevel info
        JkLogStampFormat "[%a %b %d %H:%M:%S %Y]"
</ifModule>
JkMount /*.jsp ajp13
<Directory />
   Options FollowSymLinks
   AllowOverride None
</Directory>

vi /usr/local/apache/conf/workers.properties
worker.list=ajp13
worker.ajp13.type=ajp13
worker.ajp13.host=localhost
worker.ajp13.port=8009
worker.ajp13.lbfactor=1
worker.ajp13.connection_pool_timeout=600
worker.ajp13.socket_keepalive=1

vi /usr/local/apache/conf/extra/httpd-vhosts.conf

<VirtualHost *:80>
    ServerAdmin sun@phychode.com
    DocumentRoot /usr/local/server/tomcat/webapps/joffboard
    ServerName joff.iptime.org
    ErrorLog "logs/dummy-host.example.com-error_log"
    CustomLog "logs/dummy-host.example.com-access_log" common
    JkMount  /*.jsp      ajp13
    JkMount  /*.do       ajp13
    JkMount /               ajp13
    JkMount /j_spring_security_logout ajp13
    JkMount /j_spring_security_check ajp13
<Directory "/usr/local/server/tomcat/webapps">
       Options Indexes FollowSymLinks
       AllowOverride None
       Order allow,deny
       Allow from all
       Require all granted
</Directory>

</VirtualHost>


vi /usr/local/server/tomcat/conf/server.xml
추가:<Context path="" docBase="" reloadable="true" />
<Host name="joff.iptime.org"  appBase="/usr/local/server/tomcat/webapps/joffboard"
            unpackWARs="true" autoDeploy="true">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern="common" -->
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="localhost_access_log" suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
        <Context path="" docBase="" reloadable="true" />
      </Host>

mariadb 설치
rpm -qa | grep MariaDB
yum install mariadb
yum -y install mariadb-server mariadb
systemctl start mariadb.service
mysql_secure_installation
mysql -uroot -p
show databases;
use mysql
show tables;
select host,user, password from user;
grant all privileges on *.* to 'root'@'%' identified by '비밀번호';


ps ax | grep mysql  
firewall-cmd --permanent --zone=public --add-port=3306/tcp
systemctl restart firewalld.service
firewall-cmd --list-all

오라클설치a
yum -y install libaio bc flex 

wget http://download.oracle.com/otn/linux/oracle11g/xe/oracle-xe-11.2.0-1.0.x86_64.rpm.zip?AuthParam=1441953124_91faf9530001661c1d789b2585543ea3
wget http://download.oracle.com/otn/linux/oracle11g/xe/oracle-xe-11.2.0-1.0.x86_64.rpm.zip?AuthParam=1441953548_736427c392775bcd106ecfec1e14f490

wget http://download.oracle.com/otn/linux/oracle11g/xe/oracle-xe-11.2.0-1.0.x86_64.rpm.zip?AuthParam=1352953218_8ea418096de61b5700d4352f4e503b27  -O  xe/oracle-xe-11.2.0-1.0.x86_64.rpm.zip 

unzip -q oracle-xe-11.2.0-1.0.x86_64.rpm.zip
[출처] CentOS 에서 오라클11g Express 설치|작성자 사랑굳
cd Disk1/
rpm -ivh oracle-xe-11.2.0-1.0.x86_64.rpm 

/etc/init.d/oracle-xe configure

vi ~/.bash_profile
export PATH
. /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh

reboot
echo $ORACLE_HOME
sqlplus system

마지막으로 원격지의 클라이언트가 조작할 수 있도록 변수 설정을 하자.
SQL> EXEC DBMS_XDB.SETLISTENERLOCALACCESS(FALSE);
SELECT * FROM v$version WHERE banner LIKE 'Oracle%';
sqlplus /nolog
connect sys as sysdba

exit
lsnrctl status
firewall-cmd --permanent --zone=public --add-port=1521/tcp
cat /etc/firewalld/zones/public.xml
systemctl restart firewalld
사용자이름:SYSTEM

사용자계정
sqlplus system
create user jofu identified by jofu1111;
grant connect, resource, dba to jofu;
SELECT name from v$database;
SELECT instance from v$thread;
SELECT * from all_users;
SELECT * from dba_users;



/usr/local/server/tomcat/bin/catalina.sh start
/usr/local/apache/bin/apachectl start


/usr/local/server/tomcat/bin/catalina.sh stop
/usr/local/apache/bin/apachectl stop











